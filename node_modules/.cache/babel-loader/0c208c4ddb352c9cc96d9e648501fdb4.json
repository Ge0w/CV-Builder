{"ast":null,"code":"var _jsxFileName = \"/Users/georgewalker/Documents/Coding/Odin Project/CV-Builder/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport General from \"./components/Inputs/General\";\nimport Educational from \"./components/Inputs/Educational\";\nimport PracticalExp from \"./components/Inputs/PracticalExp\";\nimport PersonalCV from \"./components/PersonalCV\";\nimport { html2pdf } from \"html2pdf.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Set General Info\n  const [infos, setInfos] = useState({\n    id: 1,\n    firstname: \"Name\",\n    lastname: \"\",\n    role: \"Role\",\n    email: \"Email\",\n    mobile: \"Mobile number\",\n    description: \"Personal Description Here\"\n  }); // Set Experience\n\n  const [exps, setExps] = useState([]); // Set Education\n\n  const [edus, setEdu] = useState([]); // Change Info\n\n  const changeInfos = info => {\n    const id = Math.floor(Math.random() * 10000 + 1);\n    setInfos({\n      id,\n      ...info\n    });\n  }; // Add Exp\n\n\n  const addExp = exp => {\n    const id = Math.floor(Math.random() * 10000 + 1);\n    const newExp = {\n      id,\n      ...exp\n    };\n    setExps([...exps, newExp]);\n  }; // Delete Exps\n\n\n  const deleteInfo = id => {\n    setExps(exps.filter(exp => exp.id !== id));\n    setEdu(edus.filter(edu => edu.id !== id));\n  }; // Add Education\n\n\n  const addEdu = edu => {\n    const id = Math.floor(Math.random() * 10000 + 1);\n    const newEdu = {\n      id,\n      ...edu\n    };\n    setEdu([...edus, newEdu]);\n  }; //HTML to PDF\n\n\n  const htpButton = document.querySelector(\"#html-to-pdf\");\n  const cvToPrint = document.querySelector(\"#cv-container\");\n  htpButton.addEventListener(\"click\", () => {\n    console.log(\"Click\"); // html2pdf(cvToPrint);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(General, {\n        onAdd: changeInfos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Educational, {\n        onAdd: addEdu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PracticalExp, {\n        onAdd: addExp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PersonalCV, {\n        edus: edus,\n        infos: infos,\n        exps: exps,\n        onDelete: deleteInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"html-to-pdf\",\n        children: \"HTML TO PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hRZjFRwl3rcEYrjAnw+D5MV52JM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/georgewalker/Documents/Coding/Odin Project/CV-Builder/src/App.js"],"names":["useState","Header","General","Educational","PracticalExp","PersonalCV","html2pdf","App","infos","setInfos","id","firstname","lastname","role","email","mobile","description","exps","setExps","edus","setEdu","changeInfos","info","Math","floor","random","addExp","exp","newExp","deleteInfo","filter","edu","addEdu","newEdu","htpButton","document","querySelector","cvToPrint","addEventListener","console","log"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport General from \"./components/Inputs/General\";\nimport Educational from \"./components/Inputs/Educational\";\nimport PracticalExp from \"./components/Inputs/PracticalExp\";\nimport PersonalCV from \"./components/PersonalCV\";\nimport { html2pdf } from \"html2pdf.js\";\n\nfunction App() {\n  // Set General Info\n  const [infos, setInfos] = useState({\n    id: 1,\n    firstname: \"Name\",\n    lastname: \"\",\n    role: \"Role\",\n    email: \"Email\",\n    mobile: \"Mobile number\",\n    description: \"Personal Description Here\",\n  });\n\n  // Set Experience\n  const [exps, setExps] = useState([]);\n\n  // Set Education\n  const [edus, setEdu] = useState([]);\n\n  // Change Info\n  const changeInfos = (info) => {\n    const id = Math.floor(Math.random() * 10000 + 1);\n    setInfos({ id, ...info });\n  };\n\n  // Add Exp\n  const addExp = (exp) => {\n    const id = Math.floor(Math.random() * 10000 + 1);\n    const newExp = { id, ...exp };\n    setExps([...exps, newExp]);\n  };\n\n  // Delete Exps\n  const deleteInfo = (id) => {\n    setExps(exps.filter((exp) => exp.id !== id));\n    setEdu(edus.filter((edu) => edu.id !== id));\n  };\n\n  // Add Education\n  const addEdu = (edu) => {\n    const id = Math.floor(Math.random() * 10000 + 1);\n    const newEdu = { id, ...edu };\n    setEdu([...edus, newEdu]);\n  };\n\n  //HTML to PDF\n  const htpButton = document.querySelector(\"#html-to-pdf\");\n  const cvToPrint = document.querySelector(\"#cv-container\");\n  htpButton.addEventListener(\"click\", () => {\n    console.log(\"Click\");\n    // html2pdf(cvToPrint);\n  });\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <div className=\"flex\">\n        <General onAdd={changeInfos} />\n        <Educational onAdd={addEdu} />\n        <PracticalExp onAdd={addExp} />\n        <PersonalCV\n          edus={edus}\n          infos={infos}\n          exps={exps}\n          onDelete={deleteInfo}\n        />\n        <button id=\"html-to-pdf\">HTML TO PDF</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}